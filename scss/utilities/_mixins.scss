@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin login-inputs {
  height: 1.9rem;
  width: 13.5rem;
  padding: 0.5rem;
  border: 2px solid $primary-color;
  border-radius: 0.3rem;
}

@mixin no-anchor-style {
  text-decoration: none;
  color: inherit;
}

@mixin no-ul-style {
  list-style-type: none;
}

%cursor-pointer {
  cursor: pointer;
}

@mixin button {
  color: rgba(255, 255, 255, 1);
  background-color: rgb(227, 142, 106);
  outline: none;
  border: none;
  height: 3rem;
  width: 11rem;
  font-size: 15px;
  border-radius: 0.5rem;
  @extend %cursor-pointer;
}

@mixin background-image($image) {
  background-image: url($image);
  background-size: cover;
  background-position: bottom;
  background-repeat: no-repeat;
  background-attachment: fixed;
}

@for $i from 1 through 1 {
  .list-space {
    margin-bottom: 25px;
  }
}

@mixin box-shadow($size) {
  @if $size == small {
    box-shadow: 2px 2px 5px rgba(0, 0, 0, 0.1);
  } @else if $size == large {
    box-shadow: 4px 4px 10px rgba(0, 0, 0, 0.2);
  } @else {
    box-shadow: none;
  }
}

// _mixins.scss
@mixin generate-spacing($property, $sizes) {
  @each $size, $value in $sizes {
    .#{$property}-#{$size} {
      #{$property}: #{$value};
    }
  }
}

// Usage Example:
@include generate-spacing(
  margin,
  (
    small: 8px,
    medium: 16px,
    large: 24px,
  )
);

// _mixins.scss
@mixin generate-border-classes($prefix, $borders) {
  @each $key, $value in $borders {
    .#{$prefix}-border-#{$key} {
      border: #{$value};
    }
  }
}

// Example usage
@include generate-border-classes(
  "box",
  (
    thin: 1px solid #ccc,
    thick: 5px solid #000,
  )
);

// _mixins.scss
%box-shadow {
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}

.card {
  @extend %box-shadow;
  padding: 20px;
}
